import random
import discord
from discord.ext import commands, tasks

class looptasks(commands.Cog):

    def __init__(self, client):
        self.client = client
        self.oferty_wysylanie = self.oferty_wysylanie
        self.oferty_wysylanie.start()

    def cog_unload(self):
        self.oferty_wysylanie = self.oferty_wysylanie
        self.oferty_wysylanie.cancel()

    @tasks.loop(seconds=15.0)
    async def oferty_wysylanie(self):
        print("Start")
        for guild in self.client.guilds:
            randomChannel = random.choice(self.client.guilds)
            randomChannelGuild = self.client.get_guild(randomChannel.id)
            if 'ğŸ””narsty' in [c.name for c in randomChannelGuild.text_channels]:
                query1 = 'SELECT "queue_number" FROM adv_queue'
                result1 = await self.client.conn.fetchval(query1)
                query2 = 'SELECT "owner_id", row_num FROM (SELECT *, ROW_NUMBER() OVER() AS row_num FROM adversitements) result WHERE row_num = $1'
                query3 = 'SELECT "adv_description", row_num FROM (SELECT *, ROW_NUMBER() OVER() AS row_num FROM adversitements) result WHERE row_num = $1'
                query4 = 'SELECT COUNT("adv_description") FROM adversitements'
                result2 = await self.client.conn.fetchval(query2, result1)
                result3 = await self.client.conn.fetchval(query3, result1)
                result4 = await self.client.conn.fetchval(query4)
                if result1 % 5 == 0:
                    query5 = 'SELECT "queue_number" FROM adv_queue'
                    result5 = await self.client.conn.fetchval(query5)
                    queryUpdate1 = 'UPDATE adv_queue SET "queue_number" = ($1 + 1)'
                    randomChannel = random.choice(self.client.guilds)
                    randomChannelGuild = self.client.get_guild(randomChannel.id)
                    channel = discord.utils.find(lambda r: r.name == 'ğŸ””narsty', randomChannelGuild.text_channels)
                    if channel is not None:
                        try:
                            await channel.send("UÅ¼ytkowniku, zapewne nie raz chciaÅ‚eÅ› jakoÅ› zarobiÄ‡, posiadajÄ…c umiejÄ™tnoÅ›ci, ale nie wiesz jak siÄ™ zareklamowaÄ‡ lub wypromowaÄ‡?ğŸ’°ğŸ’°ğŸ’° \n Nasz bot ***NinjaPortal*** oferuje reklamowanie ciebie w zakresie: \nâ–« kupiÄ™ ğŸ’µ \n â–« sprzedam ğŸ’µ \n â–« wymieniÄ™ siÄ™ ğŸ’µ \n â–« robiÄ™ ğŸ’µ \n â–« potrzebujÄ™ ğŸ’µ \n â–« szukam (kogoÅ›, czegoÅ›) ğŸ’µ \n itp... \n Co trzeba speÅ‚niÄ‡, Å¼eby twoja oferta znalazÅ‚a siÄ™ w kolejce?: \n â–« dodaÄ‡ naszego bota, ktÃ³ry bÄ™dzie reklamowaÅ‚ innych oferty na twoim serwerze \n â–« stworzyÄ‡ kanaÅ‚ :bell:ninjaportal z uprawnieniami wysyÅ‚ania wiadomoÅ›ci tylko przez bota oraz moÅ¼liwoÅ›Ä‡ wysyÅ‚ania wzmianek everyone i here (bot samodzielnie doda kanaÅ‚, lecz w razie potrzeby stworzyÅ‚em specjalnÄ… komendÄ™ do utworzenia) \n â–« zapoznaj siÄ™ z komendami za pomocÄ… komendy n!help \n â–« zapoznaj siÄ™ z regulaminem, Å¼ebyÅ› nie dostaÅ‚ blacklisty na twÃ³j serwer i twoje konto! \n Jak bot dziaÅ‚a? \n â–ª Zostajesz zapisany do kolejki, gdzie reklamy sÄ… wysyÅ‚ane co jakiÅ› czas. Bot wysyÅ‚a po kolei reklamy co parÄ™ minut, aÅ¼ dojdzie do koÅ„ca. JeÅ›li ostatnia reklama w kolejce zostanie wysÅ‚ana, bot znowu zaczyna wysyÅ‚aÄ‡ reklamy od poczÄ…tku listy. \n  https://discord.gg/muYh7Harwx")
                            await self.client.conn.execute(queryUpdate1, result5)
                            print(".ofertaTwÃ³rcy")
                        except discord.Forbidden:
                            user = self.client.get_user(318824628439089152)
                            await user.send(f"UsuÅ„ ofertÄ™ gildii {randomChannelGuild.id}, gdzie wÅ‚aÅ›ciciel to {randomChannelGuild.owner_id}, powÃ³d: 'Bot nie moÅ¼e wysÅ‚aÄ‡ wiadomoÅ›ci na kanale tekstowym'")
                            print(".nieudaneWysÅ‚anieWiadomoÅ›ci1")
                    else:
                        queryDel1 = 'DELETE FROM adversitements WHERE "owner_id" = $1'
                        randomChannel = random.choice(self.client.guilds)
                        randomChannelGuild = self.client.get_guild(randomChannel.id)
                        user = await self.client.get_user(randomChannelGuild.owner_id)
                        try:
                            embed = discord.Embed(title='Narsty', description=f'UsunÄ…Å‚em twojÄ… ofertÄ™, poniewaÅ¼ nie posiadasz kanaÅ‚u do ofert. Serwer: {randomChannelGuild.name} [1]', color=discord.Color.orange())
                            await user.send(embed=embed)
                            await self.client.conn.execute(queryDel1, randomChannelGuild.owner_id)
                            print(".brakKanaÅ‚u1")
                        except discord.Forbidden:
                            user = self.client.get_user(318824628439089152)
                            await user.send(f"UsuÅ„ ofertÄ™ gildii {randomChannelGuild.id}, gdzie wÅ‚aÅ›ciciel to {randomChannelGuild.owner_id}, powÃ³d: 'Bot nie moÅ¼e wysÅ‚aÄ‡ wiadomoÅ›ci do wÅ‚aÅ›ciciela serwera {randomChannelGuild}'")
                            print(".nieudaneWysÅ‚anieWiadomoÅ›ci2")
                elif result1 <= result4:
                    randomChannel = random.choice(self.client.guilds)
                    randomChannelGuild = self.client.get_guild(randomChannel.id)
                    channel = discord.utils.find(lambda r: r.name == 'ğŸ””narsty', randomChannelGuild.text_channels)
                    if channel is not None:
                        queryUpdate2 = 'UPDATE adv_queue SET "queue_number" = ($1 + 1)'
                        query6 = 'SELECT "queue_number" FROM adv_queue'
                        result6 = await self.client.conn.fetchval(query6)
                        print(".updateKolejki1")
                        try:
                            await channel.send(f"=-=-=-=\n Oferta wÅ‚aÅ›ciciela: {result2} \n\n {result3} \n =-=-=-=")
                            await self.client.conn.execute(queryUpdate2, result6)
                            print(".udanaOferta")
                        except discord.Forbidden:
                            user = self.client.get_user(318824628439089152)
                            await user.send(f"UsuÅ„ ofertÄ™ gildii {randomChannelGuild.id}, gdzie wÅ‚aÅ›ciciel to {randomChannelGuild.owner_id}, powÃ³d: 'Bot nie moÅ¼e wysÅ‚aÄ‡ wiadomoÅ›ci na kanale tekstowym {randomChannelGuild}'")
                            print(".nieudaneWysÅ‚anieWiadomoÅ›ci3")
                    else:
                        queryDel2 = 'DELETE FROM adversitements WHERE "owner_id" = $1'
                        await self.client.conn.execute(queryDel2, randomChannelGuild.owner_id)
                        user = self.client.get_user(randomChannelGuild.owner_id)
                        try:
                            embed = discord.Embed(title='Narsty', description=f'UsunÄ…Å‚em twojÄ… ofertÄ™, poniewaÅ¼ nie posiadasz kanaÅ‚u do ofert. Serwer: {randomChannelGuild.name} [2]', color=discord.Color.orange())
                            await user.send(embed=embed)
                            print(".brakKanaÅ‚u2")
                        except discord.Forbidden:
                            user = self.client.get_user(318824628439089152)
                            await user.send(f"UsuÅ„ ofertÄ™ gildii {randomChannelGuild.id}, gdzie wÅ‚aÅ›ciciel to {randomChannelGuild.owner_id}, powÃ³d: 'Bot nie moÅ¼e wysÅ‚aÄ‡ wiadomoÅ›ci do wÅ‚aÅ›ciciela serwera {randomChannelGuild}'")
                            print(".nieudaneWysÅ‚anieWiadomoÅ›ci4")
                elif result1 > result4:
                    queryUpdate3 = 'UPDATE adv_queue SET "queue_number" = 1'
                    await self.client.conn.execute(queryUpdate3)
                    print(".updateKolejki2")
                    break
            else:
                query7 = 'SELECT "guild_id", "owner_id", "adv_description" FROM adversitements WHERE "guild_id" = $1'
                result7 = await self.client.conn.fetchval(query7, randomChannelGuild.id)
                if result7:
                    queryDel3 = 'DELETE FROM adversitements WHERE "guild_id" = $1'
                    await self.client.conn.execute(queryDel3, randomChannelGuild.id)

        print("Koniec")


    @oferty_wysylanie.before_loop
    async def before_printer(self):
        print('Czekanie...')
        await self.client.wait_until_ready()


def setup(client):
    client.add_cog(looptasks(client))